/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
//apply plugin: 'java-library'

/**jdk版本*/
sourceCompatibility = 1.8
targetCompatibility = 1.8

//定制 MANIFEST.MF 文件
version='1.0'

sourceSets {
    main {
        java {
            /**设置项目的源码目录是src*/
            srcDirs = ['src']
        }
    }
    test {
        java {
            /**设置项目的测试代码目录是test*/
            srcDirs = ['test']
        }
    }
}

/**修改build生成目录，默认是build目录*/
buildDir = 'out'

jar {
    baseName = 'EJBServer'
    
    configurations.runtime.each { println it.path }
    println "=========" + releaseTime() + "  it  " + it 
    configurations.compile.each { println it.path }
    println "=========" + releaseTime() + "  it.path  " + it.path 

    from {
        //添加依懒到打包文件
        //configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtime.collect { zipTree(it) }
    }
    
    manifest {
        String someString = ''
         //遍历项目的所有依赖的jar包赋值给变量someString
        configurations.runtime.each{someString = someString + " lib\\"+it.name} 
        attributes 'Implementation-Title':'Gradle Quickstart','Implementation-Version':version
    //    attributes 'Main-Class': appMainClass
        attributes 'Class-Path': someString
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getDefault())
}


//uploadArchives task
uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven{ url 'http://10.16.0.68:9999/repository/maven-public'}
    maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
    maven{ url 'https://maven.aliyun.com/repository/spring/'}
    mavenLocal()
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api 'org.apache.commons:commons-math3:3.6.1'
    // ejb library
    compileOnly 'javax:javaee-web-api:7.0'
    compileOnly 'javax.jms:jms:1.1'
  //  compileOnly "org.glassfish.jersey.containers:jersey-container-servlet:2.1"
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    // implementation 'com.google.guava:guava:22.0'
    // implementation fileTree(dir:'lib',includes:['*jar'])
    
   // compileOnly  fileTree(dir:'D:/Application/Java/wildfly/bin/client',includes:['*jar'])

    // Axis Client Start
  //  implementation 'org.apache.axis:axis:1.4'
  //  implementation 'wsdl4j:wsdl4j:1.6.3'
  //  implementation 'javax.xml.soap:saaj-api:1.3'
  //  implementation 'javax.xml:jaxrpc-api:1.1'
  //  implementation 'commons-discovery:commons-discovery:0.5'
    // Axis Client End
    
    
    // Axis2 Client Start
   // implementation 'org.apache.axis2:axis2:1.6.4'
   // implementation 'ws-commons:axiom-api:1.1.1'
    // 
   // implementation 'org.apache.ws.commons.schema:XmlSchema:1.4.7'
    // Axis2 Client End
    
    
   // implementation 'commons-httpclient:commons-httpclient:3.1'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

